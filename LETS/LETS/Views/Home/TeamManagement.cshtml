@using LETS.Models
@model AllTeams
@{
    ViewBag.Title = "TeamManagement";
    ViewBag.stylesheet = "teammanagement.css";
}

<div class="form-body">
    <h3 class="form-section">Team Management</h3>
    <hr />
    <div class="form-group">
        <div class="row">
            <div class="col-md-12">
                <button type="button" data-toggle="modal" data-target="#CreateNewTeamModal" class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent pull-right mobile-request-button">
                    <i class="fa fa-plus fa-fw" aria-hidden="true"></i> Create New Team
                </button>
            </div>
        </div>
    </div>
    @Html.Partial("CreateNewTeamPartial")
    <div class="row">
        @Html.Partial("_Partials/_YourTeams")
    </div>
    @*@using (Html.BeginForm("TeamManagement", "Home", FormMethod.Post, new { id = "expanded_request", name = "form", novalidate = "" }))
            {
        <div class="form-group">
            <div class="row">
                <div class="col-md-6">
                    @Html.EditorFor(m => m.Message, "Text", new { label = "Message", @class = "col-xs-12", @required_message = "Please enter your message.", @placeholder = "Message" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-6">
                    <button type="button" id="sendmessage" class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent">
                        Submit
                    </button>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-6">
                    <ul id="discussion"></ul>
                </div>
            </div>
        </div>
    }*@
</div>
@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.1.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                $('#discussion').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };
            // Get the user name and store it to prepend to messages.
            //$('#displayname').val(prompt('Enter your name:', ''));
            // Set initial focus to message input box.
            //$('#Chat').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    var name = $('#Authenticated-User').text();
                    // Call the Send method on the hub.
                    chat.server.send(name, $('#Chat').val());
                    // Clear text box and reset focus for next comment.
                    $('#Chat').val('').focus();
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
    <script type="text/javascript" src="~/Scripts/lets/teammanagement.js"></script>
}